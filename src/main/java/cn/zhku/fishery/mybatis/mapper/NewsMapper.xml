<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zhku.fishery.mybatis.mapper.NewsMapper">
  <resultMap id="BaseResultMap" type="cn.zhku.fishery.mybatis.entity.News">
    <id column="nid" jdbcType="INTEGER" property="nid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="pubdate" jdbcType="TIMESTAMP" property="pubdate" />
    <result column="lockflag" jdbcType="INTEGER" property="lockflag" />
    <result column="soucename" jdbcType="VARCHAR" property="soucename" />
    <result column="adminid" jdbcType="VARCHAR" property="adminid" />
    <result column="dictionaryid" jdbcType="INTEGER" property="dictionaryid" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.zhku.fishery.mybatis.entity.News">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    nid, title, pubdate, lockflag, soucename, adminid, dictionaryid, text, pic
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.zhku.fishery.mybatis.entity.NewsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.zhku.fishery.mybatis.entity.NewsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where nid = #{nid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from news
    where nid = #{nid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zhku.fishery.mybatis.entity.NewsExample">
    delete from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zhku.fishery.mybatis.entity.News">
    insert into news (nid, title, pubdate, 
      lockflag, soucename, adminid, 
      dictionaryid, text, pic, 
      content)
    values (#{nid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{pubdate,jdbcType=TIMESTAMP}, 
      #{lockflag,jdbcType=INTEGER}, #{soucename,jdbcType=VARCHAR}, #{adminid,jdbcType=VARCHAR}, 
      #{dictionaryid,jdbcType=INTEGER}, #{text,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zhku.fishery.mybatis.entity.News">
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nid != null">
        nid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="pubdate != null">
        pubdate,
      </if>
      <if test="lockflag != null">
        lockflag,
      </if>
      <if test="soucename != null">
        soucename,
      </if>
      <if test="adminid != null">
        adminid,
      </if>
      <if test="dictionaryid != null">
        dictionaryid,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nid != null">
        #{nid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pubdate != null">
        #{pubdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lockflag != null">
        #{lockflag,jdbcType=INTEGER},
      </if>
      <if test="soucename != null">
        #{soucename,jdbcType=VARCHAR},
      </if>
      <if test="adminid != null">
        #{adminid,jdbcType=VARCHAR},
      </if>
      <if test="dictionaryid != null">
        #{dictionaryid,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zhku.fishery.mybatis.entity.NewsExample" resultType="java.lang.Long">
    select count(*) from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update news
    <set>
      <if test="record.nid != null">
        nid = #{record.nid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.pubdate != null">
        pubdate = #{record.pubdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lockflag != null">
        lockflag = #{record.lockflag,jdbcType=INTEGER},
      </if>
      <if test="record.soucename != null">
        soucename = #{record.soucename,jdbcType=VARCHAR},
      </if>
      <if test="record.adminid != null">
        adminid = #{record.adminid,jdbcType=VARCHAR},
      </if>
      <if test="record.dictionaryid != null">
        dictionaryid = #{record.dictionaryid,jdbcType=INTEGER},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update news
    set nid = #{record.nid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      pubdate = #{record.pubdate,jdbcType=TIMESTAMP},
      lockflag = #{record.lockflag,jdbcType=INTEGER},
      soucename = #{record.soucename,jdbcType=VARCHAR},
      adminid = #{record.adminid,jdbcType=VARCHAR},
      dictionaryid = #{record.dictionaryid,jdbcType=INTEGER},
      text = #{record.text,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update news
    set nid = #{record.nid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      pubdate = #{record.pubdate,jdbcType=TIMESTAMP},
      lockflag = #{record.lockflag,jdbcType=INTEGER},
      soucename = #{record.soucename,jdbcType=VARCHAR},
      adminid = #{record.adminid,jdbcType=VARCHAR},
      dictionaryid = #{record.dictionaryid,jdbcType=INTEGER},
      text = #{record.text,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zhku.fishery.mybatis.entity.News">
    update news
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pubdate != null">
        pubdate = #{pubdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lockflag != null">
        lockflag = #{lockflag,jdbcType=INTEGER},
      </if>
      <if test="soucename != null">
        soucename = #{soucename,jdbcType=VARCHAR},
      </if>
      <if test="adminid != null">
        adminid = #{adminid,jdbcType=VARCHAR},
      </if>
      <if test="dictionaryid != null">
        dictionaryid = #{dictionaryid,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.zhku.fishery.mybatis.entity.News">
    update news
    set title = #{title,jdbcType=VARCHAR},
      pubdate = #{pubdate,jdbcType=TIMESTAMP},
      lockflag = #{lockflag,jdbcType=INTEGER},
      soucename = #{soucename,jdbcType=VARCHAR},
      adminid = #{adminid,jdbcType=VARCHAR},
      dictionaryid = #{dictionaryid,jdbcType=INTEGER},
      text = #{text,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zhku.fishery.mybatis.entity.News">
    update news
    set title = #{title,jdbcType=VARCHAR},
      pubdate = #{pubdate,jdbcType=TIMESTAMP},
      lockflag = #{lockflag,jdbcType=INTEGER},
      soucename = #{soucename,jdbcType=VARCHAR},
      adminid = #{adminid,jdbcType=VARCHAR},
      dictionaryid = #{dictionaryid,jdbcType=INTEGER},
      text = #{text,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR}
    where nid = #{nid,jdbcType=INTEGER}
  </update>
</mapper>